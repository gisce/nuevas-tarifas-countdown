{"version":3,"sources":["App.js","index.js"],"names":["renderTime","remainingTime","className","role","value","seconds","Number","d","Math","floor","h","m","s","days","hours","minutes","secondsToDhms","App","isPlaying","duration","Date","initialRemainingTime","colors","onComplete","strokeWidth","size","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAkBMA,EAAa,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACpB,GAAsB,IAAlBA,EACF,OACE,sBAAKC,UAAU,QAAf,UACE,sBAAMC,KAAK,MAAX,0BADF,gCAMJ,MAvBoB,SAACC,GACrB,IAAMC,EAAUC,OAAOF,GACjBG,EAAIC,KAAKC,MAAMJ,EAAO,OACtBK,EAAIF,KAAKC,MAAOJ,EAAO,MAAkB,MACzCM,EAAIH,KAAKC,MAAOJ,EAAU,KAAQ,IAClCO,EAAIJ,KAAKC,MAAMJ,EAAU,IAM/B,MAAO,CAACQ,KAJSN,EAAI,EAAIA,GAAU,GAALA,EAAS,YAAW,aAAY,GAItCO,MAHPJ,EAAI,EAAIA,GAAU,GAALA,EAAS,UAAY,WAAa,GAGvBK,QAFxBJ,EAAI,EAAIA,GAAU,GAALA,EAAS,YAAc,aAAe,GAERN,QAD3CO,EAAI,EAAIA,GAAU,GAALA,EAAS,WAAa,aAAe,IAa3BI,CAAcf,GAA/CY,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,QAASV,EAA7B,EAA6BA,QAE7B,OACE,qBAAKH,UAAU,QAAf,SACE,sBAAKA,UAAU,QAAf,UACGW,EAAK,uBAAMC,EAAM,uBAAMC,EAAQ,uBAAMV,QA2B/BY,MArBf,WACE,OACE,sBAAKf,UAAU,MAAf,UACE,qEACA,qBAAKA,UAAU,gBAAf,SACE,cAAC,uBAAD,CACEgB,WAAS,EACTC,UAAW,IAAIC,KAAK,KAAM,EAAG,GAAK,IAAIA,KAAK,KAAM,EAAG,KAAO,IAC3DC,sBAAuB,IAAID,KAAK,KAAM,EAAG,GAAK,IAAIA,MAAU,IAC5DE,OAAQ,CAAC,CAAC,UAAW,KAAO,CAAC,UAAW,KAAO,CAAC,YAChDC,WAAY,iBAAM,EAAC,EAAM,MACzBC,YAAa,GACbC,KAAM,IAPR,SASGzB,UC/CX0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d1ae9774.chunk.js","sourcesContent":["import { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nimport \"./styles.css\";\n\nconst secondsToDhms = (value) => {\n  const seconds = Number(value);\n  const d = Math.floor(seconds / (3600 * 24));\n  const h = Math.floor((seconds % (3600 * 24)) / 3600);\n  const m = Math.floor((seconds % 3600) / 60);\n  const s = Math.floor(seconds % 60);\n\n  const dDisplay = d > 0 ? d + (d == 1 ? \" dÃ­a, \" : \" dÃ­as \") : \"\";\n  const hDisplay = h > 0 ? h + (h == 1 ? \" hora, \" : \" horas \") : \"\";\n  const mDisplay = m > 0 ? m + (m == 1 ? \" minuto, \" : \" minutos \") : \"\";\n  const sDisplay = s > 0 ? s + (s == 1 ? \" segundo\" : \" segundos\") : \"\";\n  return {days: dDisplay, hours: hDisplay, minutes: mDisplay, seconds: sDisplay};\n}\n\nconst renderTime = ({ remainingTime }) => {\n  if (remainingTime === 0) {\n    return (\n      <div className=\"timer\">\n        <span role=\"img\">ðŸŽ‰</span> Ya ha llegado el momento!\n      </div>\n    );\n  }\n\n  const {days, hours, minutes, seconds} = secondsToDhms(remainingTime);\n\n  return (\n    <div className=\"timer\">\n      <div className=\"value\">\n        {days}<br/>{hours}<br/>{minutes}<br/>{seconds}\n      </div>\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>AplicaciÃ³n de las nuevas tarifas</h1>\n      <div className=\"timer-wrapper\">\n        <CountdownCircleTimer\n          isPlaying\n          duration={(new Date(2021, 5, 1) - new Date(2021, 4, 24)) / 1000}\n          initialRemainingTime={(new Date(2021, 5, 1) - new Date()) / 1000}\n          colors={[[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]]}\n          onComplete={() => [true, 1000]}\n          strokeWidth={26}\n          size={300}\n        >\n          {renderTime}\n        </CountdownCircleTimer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}